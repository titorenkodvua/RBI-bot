import { validateConfig } from './config';
import { connectDatabase, disconnectDatabase } from './database/fileStorage';
import { initializeGoogleSheets } from './services/googleSheets';
import { startNotificationService } from './services/notificationService';
import { bot } from './bot';

async function startBot(): Promise<void> {
  try {
    console.log('ü§ñ Starting RBI Bot...');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    validateConfig();
    
    // –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ MongoDB
    await connectDatabase();
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º Google Sheets API
    await initializeGoogleSheets();
    
    // –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–∏—Å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
    startNotificationService();
    
    // –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
    await bot.launch();
    
    console.log('‚úÖ RBI Bot started successfully!');
    
    // Graceful shutdown
    process.once('SIGINT', () => shutdown('SIGINT'));
    process.once('SIGTERM', () => shutdown('SIGTERM'));
    
  } catch (error) {
    console.error('‚ùå Failed to start bot:', error);
    process.exit(1);
  }
}

async function shutdown(signal: string): Promise<void> {
  console.log(`\nüõë Received ${signal}, shutting down gracefully...`);
  
  try {
    // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –±–æ—Ç–∞
    bot.stop(signal);
    
    // –û—Ç–∫–ª—é—á–∞–µ–º—Å—è –æ—Ç –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    await disconnectDatabase();
    
    console.log('‚úÖ Shutdown completed');
    process.exit(0);
  } catch (error) {
    console.error('‚ùå Error during shutdown:', error);
    process.exit(1);
  }
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö –æ—à–∏–±–æ–∫
process.on('unhandledRejection', (reason, promise) => {
  console.error('‚ùå Unhandled Rejection at:', promise, 'reason:', reason);
});

process.on('uncaughtException', (error) => {
  console.error('‚ùå Uncaught Exception:', error);
  process.exit(1);
});

// –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
startBot(); 
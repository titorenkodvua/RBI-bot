import { ParsedTransaction, TransactionType } from '../types';
import { botConfig } from '../config';

/**
 * –í–∞–ª–∏–¥–∏—Ä—É–µ—Ç –∏ –ø–∞—Ä—Å–∏—Ç —Å—É–º–º—É –∏–∑ —Å—Ç—Ä–æ–∫–∏
 * @param amountStr - —Å—Ç—Ä–æ–∫–∞ —Å —Å—É–º–º–æ–π
 * @returns –æ–±—ä–µ–∫—Ç —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º –≤–∞–ª–∏–¥–∞—Ü–∏–∏
 */
export function validateAndParseAmount(amountStr: string): { isValid: boolean; amount?: number; error?: string } {
  if (!amountStr || amountStr.trim() === '') {
    return { isValid: false, error: '–°—É–º–º–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç–æ–π' };
  }

  // –£–±–∏—Ä–∞–µ–º –ø—Ä–æ–±–µ–ª—ã
  const cleanAmountStr = amountStr.trim();
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —Å—Ç—Ä–æ–∫–∞ —Å–æ–¥–µ—Ä–∂–∏—Ç —Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã, —Ç–æ—á–∫—É, –∑–∞–ø—è—Ç—É—é –∏ –∑–Ω–∞–∫ –º–∏–Ω—É—Å –≤ –Ω–∞—á–∞–ª–µ
  const validPattern = /^-?[\d,. ]+$/;
  if (!validPattern.test(cleanAmountStr)) {
    return { isValid: false, error: '–°—É–º–º–∞ —Å–æ–¥–µ—Ä–∂–∏—Ç –Ω–µ–¥–æ–ø—É—Å—Ç–∏–º—ã–µ —Å–∏–º–≤–æ–ª—ã' };
  }

  // –ó–∞–º–µ–Ω—è–µ–º –∑–∞–ø—è—Ç—É—é –Ω–∞ —Ç–æ—á–∫—É –∏ —É–±–∏—Ä–∞–µ–º –ø—Ä–æ–±–µ–ª—ã (–¥–ª—è —á–∏—Å–µ–ª –≤–∏–¥–∞ "1 500,50")
  let normalizedAmountStr = cleanAmountStr.replace(/\s+/g, '').replace(',', '.');
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –Ω–µ—Ç –±–æ–ª–µ–µ –æ–¥–Ω–æ–π —Ç–æ—á–∫–∏
  const dotCount = (normalizedAmountStr.match(/\./g) || []).length;
  if (dotCount > 1) {
    return { isValid: false, error: '–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —á–∏—Å–ª–∞ - —Å–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ —Ç–æ—á–µ–∫' };
  }

  // –ü–∞—Ä—Å–∏–º —á–∏—Å–ª–æ
  const amount = parseFloat(normalizedAmountStr);
  
  if (isNaN(amount)) {
    return { isValid: false, error: '–ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å —á–∏—Å–ª–æ' };
  }

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —Å—É–º–º–∞ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–∞—è
  if (Math.abs(amount) <= 0) {
    return { isValid: false, error: '–°—É–º–º–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –±–æ–ª—å—à–µ –Ω—É–ª—è' };
  }

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑—É–º–Ω—ã–µ –ø—Ä–µ–¥–µ–ª—ã (–º–∞–∫—Å–∏–º—É–º 1 –º–∏–ª–ª–∏–æ–Ω)
  if (Math.abs(amount) > 1000000) {
    return { isValid: false, error: '–°—É–º–º–∞ —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–∞—è (–º–∞–∫—Å–∏–º—É–º $1,000,000)' };
  }

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –ø–æ—Å–ª–µ —Ç–æ—á–∫–∏ –Ω–µ –±–æ–ª–µ–µ 2 —Ü–∏—Ñ—Ä (—Ü–µ–Ω—Ç—ã)
  const decimalPart = normalizedAmountStr.split('.')[1];
  if (decimalPart && decimalPart.length > 2) {
    return { isValid: false, error: '–°—É–º–º–∞ –Ω–µ –º–æ–∂–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å –±–æ–ª–µ–µ 2 –∑–Ω–∞–∫–æ–≤ –ø–æ—Å–ª–µ –∑–∞–ø—è—Ç–æ–π' };
  }

  return { isValid: true, amount: Math.abs(amount) };
}

export function parseTransactionMessage(message: string): ParsedTransaction | null {
  // –£–±–∏—Ä–∞–µ–º –ª–∏—à–Ω–∏–µ –ø—Ä–æ–±–µ–ª—ã –∏ —Ä–∞–∑–±–∏–≤–∞–µ–º –Ω–∞ —á–∞—Å—Ç–∏
  const cleanMessage = message.trim().replace(/\s+/g, ' ');
  const parts = cleanMessage.split(' ');
  
  if (parts.length < 2) {
    return null;
  }

  // –ü–µ—Ä–≤–∞—è —á–∞—Å—Ç—å –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —á–∏—Å–ª–æ–º (—Å—É–º–º–∞)
  const amountStr = parts[0];
  const validation = validateAndParseAmount(amountStr);
  
  if (!validation.isValid) {
    return null;
  }

  const amount = validation.amount!;

  // –û—Å—Ç–∞–ª—å–Ω—ã–µ —á–∞—Å—Ç–∏ - –æ–ø–∏—Å–∞–Ω–∏–µ
  const description = parts.slice(1).join(' ');
  
  if (!description.trim()) {
    return null;
  }

  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –ø–æ –∏—Å—Ö–æ–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–µ (–µ—Å–ª–∏ –±—ã–ª–∞ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–∞—è)
  const type: TransactionType = amountStr.startsWith('-') ? 'take' : 'give';

  return {
    amount,
    description: description.trim(),
    type
  };
}

export function parseTransactionWithType(message: string): ParsedTransaction | null {
  // –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º —Ñ–æ—Ä–º–∞—Ç—ã:
  // "+100 –ø–µ—Ä–µ–≤–æ–¥ –Ω–∞ –∫–∞—Ä—Ç—É" - –¥–∞—é –¥–µ–Ω—å–≥–∏
  // "-50 –≤–∑—è–ª –∑–∞ –æ–±–µ–¥" - –±–µ—Ä—É –¥–µ–Ω—å–≥–∏
  // "100 –ø–µ—Ä–µ–≤–æ–¥" - –¥–∞—é –¥–µ–Ω—å–≥–∏ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)
  
  const cleanMessage = message.trim().replace(/\s+/g, ' ');
  let type: TransactionType = 'give'; // –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –¥–∞—é
  let amountStr = '';
  let description = '';

  if (cleanMessage.startsWith('+')) {
    type = 'give';
    const parts = cleanMessage.substring(1).trim().split(' ');
    amountStr = parts[0];
    description = parts.slice(1).join(' ');
  } else if (cleanMessage.startsWith('-')) {
    type = 'take';
    const parts = cleanMessage.substring(1).trim().split(' ');
    amountStr = parts[0];
    description = parts.slice(1).join(' ');
  } else {
    // –û–±—ã—á–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç "—Å—É–º–º–∞ –æ–ø–∏—Å–∞–Ω–∏–µ"
    const parts = cleanMessage.split(' ');
    amountStr = parts[0];
    description = parts.slice(1).join(' ');
  }

  // –í–∞–ª–∏–¥–∏—Ä—É–µ–º –∏ –ø–∞—Ä—Å–∏–º —Å—É–º–º—É
  const validation = validateAndParseAmount(amountStr);
  
  if (!validation.isValid) {
    return null;
  }

  if (!description.trim()) {
    return null;
  }

  return {
    amount: validation.amount!,
    description: description.trim(),
    type
  };
}

export function parseTransactionWithValidation(message: string): { success: boolean; transaction?: ParsedTransaction; error?: string } {
  // –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º —Ñ–æ—Ä–º–∞—Ç—ã:
  // "+100 –ø–µ—Ä–µ–≤–æ–¥ –Ω–∞ –∫–∞—Ä—Ç—É" - –¥–∞—é –¥–µ–Ω—å–≥–∏
  // "-50 –≤–∑—è–ª –∑–∞ –æ–±–µ–¥" - –±–µ—Ä—É –¥–µ–Ω—å–≥–∏
  // "100 –ø–µ—Ä–µ–≤–æ–¥" - –¥–∞—é –¥–µ–Ω—å–≥–∏ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)
  
  const cleanMessage = message.trim().replace(/\s+/g, ' ');
  
  if (!cleanMessage) {
    return { success: false, error: '–°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º' };
  }

  let type: TransactionType = 'give'; // –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –¥–∞—é
  let amountStr = '';
  let description = '';

  if (cleanMessage.startsWith('+')) {
    type = 'give';
    const parts = cleanMessage.substring(1).trim().split(' ');
    amountStr = parts[0];
    description = parts.slice(1).join(' ');
  } else if (cleanMessage.startsWith('-')) {
    type = 'take';
    const parts = cleanMessage.substring(1).trim().split(' ');
    amountStr = parts[0];
    description = parts.slice(1).join(' ');
  } else {
    // –û–±—ã—á–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç "—Å—É–º–º–∞ –æ–ø–∏—Å–∞–Ω–∏–µ"
    const parts = cleanMessage.split(' ');
    if (parts.length < 2) {
      return { success: false, error: '–£–∫–∞–∂–∏—Ç–µ —Å—É–º–º—É –∏ –æ–ø–∏—Å–∞–Ω–∏–µ. –ü—Ä–∏–º–µ—Ä: 100 –æ–±–µ–¥' };
    }
    amountStr = parts[0];
    description = parts.slice(1).join(' ');
  }

  // –í–∞–ª–∏–¥–∏—Ä—É–µ–º –∏ –ø–∞—Ä—Å–∏–º —Å—É–º–º—É
  const validation = validateAndParseAmount(amountStr);
  
  if (!validation.isValid) {
    return { success: false, error: validation.error || '–û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ —Å—É–º–º—ã' };
  }

  if (!description.trim()) {
    return { success: false, error: '–û–ø–∏—Å–∞–Ω–∏–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º' };
  }

  return {
    success: true,
    transaction: {
      amount: validation.amount!,
      description: description.trim(),
      type
    }
  };
}

export function formatTransactionInput(transaction: ParsedTransaction): string {
  const sign = transaction.type === 'give' ? '+' : '-';
  const emoji = transaction.type === 'give' ? 'üí∞' : 'üí∏';
  const formattedAmount = transaction.amount.toLocaleString('en-US', {
    minimumFractionDigits: 2,
    maximumFractionDigits: 2
  });
  return `${emoji} ${sign}${botConfig.currency.symbol}${formattedAmount} - ${transaction.description}`;
}

export function getTransactionExamples(): string {
  return `–ü—Ä–∏–º–µ—Ä—ã –≤–≤–æ–¥–∞:
  
üí∞ –î–∞—é –¥–µ–Ω—å–≥–∏:
‚Ä¢ 1000 –ø–µ—Ä–µ–≤–æ–¥ –Ω–∞ –∫–∞—Ä—Ç—É
‚Ä¢ +500,50 –∑–∞ –ø—Ä–æ–¥—É–∫—Ç—ã
‚Ä¢ 200.25 –æ–ø–ª–∞—Ç–∞ —Ç–∞–∫—Å–∏

üí∏ –ë–µ—Ä—É –¥–µ–Ω—å–≥–∏:
‚Ä¢ -150,75 –≤–∑—è–ª –∑–∞ –æ–±–µ–¥
‚Ä¢ -50 –ø—Ä–æ–µ–∑–¥
‚Ä¢ -1200,12 –∑–∞ –ø–æ–∫—É–ø–∫–∏

–§–æ—Ä–º–∞—Ç: <—Å—É–º–º–∞> <–æ–ø–∏—Å–∞–Ω–∏–µ>
+ –æ–∑–Ω–∞—á–∞–µ—Ç "–¥–∞—é –¥–µ–Ω—å–≥–∏ –ø–∞—Ä—Ç–Ω–µ—Ä—É" (–≤ USD)
- –æ–∑–Ω–∞—á–∞–µ—Ç "–±–µ—Ä—É –¥–µ–Ω—å–≥–∏ —É –ø–∞—Ä—Ç–Ω–µ—Ä–∞" (–≤ USD)
–ú–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–∞–∫ —Ç–æ—á–∫—É, —Ç–∞–∫ –∏ –∑–∞–ø—è—Ç—É—é –¥–ª—è —Ü–µ–Ω—Ç–æ–≤`;
} 